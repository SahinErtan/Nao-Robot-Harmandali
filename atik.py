import sys
import time
from naoqi import ALProxy


def atik():
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.12, 0.48, 0.88, 3.2, 3.44, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[0, [3, -0.04, 0], [3, 0.12, 0]], [0, [3, -0.12, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.773333, 0]], [0, [3, -0.773333, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.373333, 0]], [0, [3, -0.373333, 0], [3, 0.4, 0]], [0, [3, -0.4, 0], [3, 0.12, 0]], [0, [3, -0.12, 0], [3, 0.333333, 0]], [0, [3, -0.333333, 0], [3, 0.386667, 0]], [0, [3, -0.386667, 0], [3, 0.36, 0]], [0, [3, -0.36, 0], [3, 0.146667, 0]], [0, [3, -0.146667, 0], [3, 0.12, 0]], [0, [3, -0.12, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.04, 0]], [0, [3, -0.04, 0], [3, 0.0933333, 0]], [0, [3, -0.0933333, 0], [3, 0.413333, 0]], [0, [3, -0.413333, 0], [3, 0.266667, 0]], [0, [3, -0.266667, 0], [3, 0.173333, 0]], [0, [3, -0.173333, 0], [3, 0.293333, 0]], [0, [3, -0.293333, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.2, 0]], [0, [3, -0.2, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([0.12, 0.48, 0.88, 3.2, 3.44, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[0, [3, -0.04, 0], [3, 0.12, 0]], [0, [3, -0.12, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.773333, 0]], [0, [3, -0.773333, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.373333, 0]], [0, [3, -0.373333, 0], [3, 0.4, 0]], [0, [3, -0.4, 0], [3, 0.12, 0]], [0, [3, -0.12, 0], [3, 0.333333, 0]], [0, [3, -0.333333, 0], [3, 0.386667, 0]], [0, [3, -0.386667, 0], [3, 0.36, 0]], [0, [3, -0.36, 0], [3, 0.146667, 0]], [0, [3, -0.146667, 0], [3, 0.12, 0]], [0, [3, -0.12, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.04, 0]], [0, [3, -0.04, 0], [3, 0.0933333, 0]], [0, [3, -0.0933333, 0], [3, 0.413333, 0]], [0, [3, -0.413333, 0], [3, 0.266667, 0]], [0, [3, -0.266667, 0], [3, 0.173333, 0]], [0, [3, -0.173333, 0], [3, 0.293333, 0]], [0, [3, -0.293333, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.2, 0]], [0, [3, -0.2, 0], [3, 0, 0]]])

    names.append("LAnklePitch")
    times.append([0.12, 0.48, 0.88, 3.2, 3.44, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[-0.50988, [3, -0.04, 0], [3, 0.12, 0]], [-0.513945, [3, -0.12, 0], [3, 0.133333, 0]], [-0.507927, [3, -0.133333, 0], [3, 0.773333, 0]], [-0.507927, [3, -0.773333, 0], [3, 0.08, 0]], [-0.513945, [3, -0.08, 0], [3, 0.373333, 0]], [-0.507927, [3, -0.373333, 0], [3, 0.4, 0]], [-0.507927, [3, -0.4, 0], [3, 0.12, 0]], [-0.513945, [3, -0.12, 0.00601788], [3, 0.333333, -0.0167163]], [-0.887311, [3, -0.333333, 3.44374e-07], [3, 0.386667, -3.99474e-07]], [-0.887312, [3, -0.386667, 0], [3, 0.36, 0]], [-0.412861, [3, -0.36, 0], [3, 0.146667, 0]], [-0.620347, [3, -0.146667, 0.0797273], [3, 0.12, -0.0652314]], [-0.847737, [3, -0.12, 0], [3, 0.133333, 0]], [-0.845502, [3, -0.133333, -0.00223526], [3, 0.04, 0.000670577]], [-0.760535, [3, -0.04, 0], [3, 0.0933333, 0]], [-0.760535, [3, -0.0933333, 0], [3, 0.413333, 0]], [-0.759218, [3, -0.413333, -0.00131673], [3, 0.266667, 0.000849505]], [-0.749191, [3, -0.266667, 0], [3, 0.173333, 0]], [-0.750132, [3, -0.173333, 0.000940628], [3, 0.293333, -0.00159183]], [-0.757344, [3, -0.293333, 0.00721164], [3, 0.08, -0.00196681]], [-0.847738, [3, -0.08, 0], [3, 0.133333, 0]], [-0.620346, [3, -0.133333, -0.0579836], [3, 0.2, 0.0869753]], [-0.412861, [3, -0.2, 0], [3, 0, 0]]])

    names.append("LAnkleRoll")
    times.append([0.12, 0.48, 0.88, 3.2, 3.44, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[0.25191, [3, -0.04, 0], [3, 0.12, 0]], [0.247852, [3, -0.12, 0.00148096], [3, 0.133333, -0.00164551]], [0.242531, [3, -0.133333, 0], [3, 0.773333, 0]], [0.242531, [3, -0.773333, 0], [3, 0.08, 0]], [0.247852, [3, -0.08, 0], [3, 0.373333, 0]], [0.242531, [3, -0.373333, 0], [3, 0.4, 0]], [0.242531, [3, -0.4, 0], [3, 0.12, 0]], [0.247852, [3, -0.12, 0], [3, 0.333333, 0]], [0.0484507, [3, -0.333333, 0], [3, 0.386667, 0]], [0.0484507, [3, -0.386667, 0], [3, 0.36, 0]], [-0.0359159, [3, -0.36, 0.0838852], [3, 0.146667, -0.0341755]], [-0.305731, [3, -0.146667, 0], [3, 0.12, 0]], [-0.18348, [3, -0.12, -0.0205483], [3, 0.133333, 0.0228314]], [-0.160649, [3, -0.133333, 0], [3, 0.04, 0]], [-0.17268, [3, -0.04, 0], [3, 0.0933333, 0]], [-0.17268, [3, -0.0933333, 0], [3, 0.413333, 0]], [-0.173267, [3, -0.413333, 1.28997e-07], [3, 0.266667, -8.32238e-08]], [-0.173267, [3, -0.266667, 0], [3, 0.173333, 0]], [-0.17268, [3, -0.173333, 0], [3, 0.293333, 0]], [-0.177584, [3, -0.293333, 0.0028284], [3, 0.08, -0.000771381]], [-0.183479, [3, -0.08, 0.00589572], [3, 0.133333, -0.0098262]], [-0.305731, [3, -0.133333, 0], [3, 0.2, 0]], [-0.0359159, [3, -0.2, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.12, 0.48, 0.88, 3.2, 3.44, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[-0.0503407, [3, -0.04, 0], [3, 0.12, 0]], [-0.0501213, [3, -0.12, 0], [3, 0.133333, 0]], [-0.0508345, [3, -0.133333, 0], [3, 0.773333, 0]], [-0.0508345, [3, -0.773333, 0], [3, 0.08, 0]], [-0.0501213, [3, -0.08, 0], [3, 0.373333, 0]], [-0.0508345, [3, -0.373333, 0], [3, 0.4, 0]], [-0.0508345, [3, -0.4, 0], [3, 0.12, 0]], [-0.0501213, [3, -0.12, 0], [3, 0.333333, 0]], [-0.509956, [3, -0.333333, 6.02655e-07], [3, 0.386667, -6.9908e-07]], [-0.509956, [3, -0.386667, 0], [3, 0.36, 0]], [-0.0453297, [3, -0.36, 0], [3, 0.146667, 0]], [-0.0519493, [3, -0.146667, 0], [3, 0.12, 0]], [-0.0519493, [3, -0.12, 0], [3, 0.133333, 0]], [-0.0520815, [3, -0.133333, 0], [3, 0.04, 0]], [-0.0504825, [3, -0.04, 0], [3, 0.0933333, 0]], [-0.0504825, [3, -0.0933333, 0], [3, 0.413333, 0]], [-0.0520815, [3, -0.413333, 3.22492e-08], [3, 0.266667, -2.08059e-08]], [-0.0520815, [3, -0.266667, 0], [3, 0.173333, 0]], [-0.0504825, [3, -0.173333, 0], [3, 0.293333, 0]], [-0.0551772, [3, -0.293333, 0], [3, 0.08, 0]], [-0.0519494, [3, -0.08, 0], [3, 0.133333, 0]], [-0.0519494, [3, -0.133333, 0], [3, 0.2, 0]], [-0.0453297, [3, -0.2, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.12, 0.48, 0.88, 3.2, 3.44, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[-0.245638, [3, -0.04, 0], [3, 0.12, 0]], [-0.245283, [3, -0.12, 0], [3, 0.133333, 0]], [-0.247395, [3, -0.133333, 0], [3, 0.773333, 0]], [-0.247395, [3, -0.773333, 0], [3, 0.08, 0]], [-0.245283, [3, -0.08, 0], [3, 0.373333, 0]], [-0.247395, [3, -0.373333, 0], [3, 0.4, 0]], [-0.247395, [3, -0.4, 0], [3, 0.12, 0]], [-0.245283, [3, -0.12, 0], [3, 0.333333, 0]], [-1.49935, [3, -0.333333, 0], [3, 0.386667, 0]], [-1.49935, [3, -0.386667, -6.6579e-07], [3, 0.36, 6.19874e-07]], [-0.252591, [3, -0.36, 0], [3, 0.146667, 0]], [-0.258652, [3, -0.146667, 0], [3, 0.12, 0]], [-0.258057, [3, -0.12, 0], [3, 0.133333, 0]], [-0.260566, [3, -0.133333, 0], [3, 0.04, 0]], [-0.255866, [3, -0.04, 0], [3, 0.0933333, 0]], [-0.255866, [3, -0.0933333, 0], [3, 0.413333, 0]], [-0.260565, [3, -0.413333, 9.54577e-07], [3, 0.266667, -6.15856e-07]], [-0.260566, [3, -0.266667, 0], [3, 0.173333, 0]], [-0.255866, [3, -0.173333, -0.000903326], [3, 0.293333, 0.00152871]], [-0.25327, [3, -0.293333, 0], [3, 0.08, 0]], [-0.258057, [3, -0.08, 0.000356051], [3, 0.133333, -0.000593419]], [-0.258651, [3, -0.133333, 0], [3, 0.2, 0]], [-0.252591, [3, -0.2, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.12, 0.48, 0.88, 3.2, 3.44, 3.84, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[0.607877, [3, -0.04, 0], [3, 0.12, 0]], [0.603265, [3, -0.12, 0.00461203], [3, 0.133333, -0.00512448]], [0.2, [3, -0.133333, 0], [3, 0.773333, 0]], [0.607877, [3, -0.773333, 0], [3, 0.08, 0]], [0.603265, [3, -0.08, 0.00461203], [3, 0.133333, -0.00768671]], [0.2, [3, -0.133333, 0], [3, 0.24, 0]], [0.607877, [3, -0.24, 0], [3, 0.4, 0]], [0.607877, [3, -0.4, 0], [3, 0.12, 0]], [0.603265, [3, -0.12, 0.000167756], [3, 0.333333, -0.000465989]], [0.602799, [3, -0.333333, 0], [3, 0.386667, 0]], [0.602799, [3, -0.386667, -5.96047e-08], [3, 0.36, 5.5494e-08]], [0.608664, [3, -0.36, 0], [3, 0.146667, 0]], [0.604459, [3, -0.146667, 0], [3, 0.12, 0]], [0.604459, [3, -0.12, 0], [3, 0.133333, 0]], [0.608664, [3, -0.133333, 0], [3, 0.04, 0]], [0.2, [3, -0.04, 0], [3, 0.0933333, 0]], [0.2, [3, -0.0933333, 0], [3, 0.413333, 0]], [0.608664, [3, -0.413333, 0], [3, 0.266667, 0]], [0.608664, [3, -0.266667, 0], [3, 0.173333, 0]], [0.2, [3, -0.173333, 0], [3, 0.293333, 0]], [0.26, [3, -0.293333, 0], [3, 0.08, 0]], [0.17, [3, -0.08, 0], [3, 0.133333, 0]], [0.73, [3, -0.133333, -0.00280333], [3, 0.2, 0.00420499]], [0.608664, [3, -0.2, 0], [3, 0, 0]]])

    names.append("LHipPitch")
    times.append([0.12, 0.48, 0.88, 3.2, 3.44, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 12.52, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[-0.696529, [3, -0.04, 0], [3, 0.12, 0]], [-0.61626, [3, -0.12, -0.000534077], [3, 0.133333, 0.000593419]], [-0.615667, [3, -0.133333, 0], [3, 0.773333, 0]], [-0.615667, [3, -0.773333, 0], [3, 0.08, 0]], [-0.61626, [3, -0.08, 0], [3, 0.373333, 0]], [-0.616168, [3, -0.373333, 0], [3, 0.4, 0]], [-0.616168, [3, -0.4, 0], [3, 0.12, 0]], [-0.61626, [3, -0.12, 9.25448e-05], [3, 0.333333, -0.000257069]], [-0.811767, [3, -0.333333, 6.88749e-07], [3, 0.386667, -7.98948e-07]], [-0.811767, [3, -0.386667, 0], [3, 0.36, 0]], [-0.52256, [3, -0.36, 0], [3, 0.146667, 0]], [-0.805574, [3, -0.146667, 0.0991306], [3, 0.12, -0.0811069]], [-1.06327, [3, -0.12, 0.115105], [3, 0.133333, -0.127894]], [-1.53457, [3, -0.133333, 0], [3, 0.04, 0]], [-1.53295, [3, -0.04, 0], [3, 0.0933333, 0]], [-1.53295, [3, -0.0933333, 0], [3, 0.413333, 0]], [-1.53291, [3, -0.413333, 0], [3, 0.106667, 0]], [-1.53589, [3, -0.106667, 0], [3, 0.16, 0]], [-1.1013, [3, -0.16, -0.22362], [3, 0.173333, 0.242255]], [-0.138263, [3, -0.173333, -0.00497124], [3, 0.293333, 0.00841288]], [-0.12985, [3, -0.293333, 0], [3, 0.08, 0]], [-1.06327, [3, -0.08, 0], [3, 0.133333, 0]], [-0.805574, [3, -0.133333, -0.0720949], [3, 0.2, 0.108142]], [-0.52256, [3, -0.2, 0], [3, 0, 0]]])

    names.append("LHipRoll")
    times.append([0.12, 0.48, 0.88, 3.2, 3.44, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 12.52, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[-0.247046, [3, -0.04, 0], [3, 0.12, 0]], [-0.249573, [3, -0.12, 0], [3, 0.133333, 0]], [-0.245751, [3, -0.133333, 0], [3, 0.773333, 0]], [-0.245751, [3, -0.773333, 0], [3, 0.08, 0]], [-0.249573, [3, -0.08, 0], [3, 0.373333, 0]], [-0.2462, [3, -0.373333, 0], [3, 0.4, 0]], [-0.2462, [3, -0.4, 0], [3, 0.12, 0]], [-0.249573, [3, -0.12, 0], [3, 0.333333, 0]], [-0.0484407, [3, -0.333333, 0], [3, 0.386667, 0]], [-0.0484408, [3, -0.386667, 0], [3, 0.36, 0]], [0.0357382, [3, -0.36, -0.0835092], [3, 0.146667, 0.0340223]], [0.304154, [3, -0.146667, -0.0660646], [3, 0.12, 0.0540529]], [0.396091, [3, -0.12, 0], [3, 0.133333, 0]], [0.393332, [3, -0.133333, 0.00275824], [3, 0.04, -0.000827471]], [-0.0984597, [3, -0.04, 0.075968], [3, 0.0933333, -0.177259]], [-0.366347, [3, -0.0933333, 0.000561775], [3, 0.413333, -0.00248786]], [-0.368835, [3, -0.413333, 0], [3, 0.106667, 0]], [0.200713, [3, -0.106667, 0], [3, 0.16, 0]], [0.0600504, [3, -0.16, 0], [3, 0.173333, 0]], [0.651412, [3, -0.173333, -0.00305421], [3, 0.293333, 0.00516866]], [0.656581, [3, -0.293333, 0], [3, 0.08, 0]], [0.39609, [3, -0.08, 0.0440534], [3, 0.133333, -0.0734224]], [0.304153, [3, -0.133333, 0.0480469], [3, 0.2, -0.0720704]], [0.0357382, [3, -0.2, 0], [3, 0, 0]]])

    names.append("LHipYawPitch")
    times.append([0.12, 0.48, 0.88, 1.76, 3, 3.2, 3.44, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[0, [3, -0.04, 0], [3, 0.12, 0]], [-0.0106071, [3, -0.12, 0], [3, 0.133333, 0]], [0.0307829, [3, -0.133333, -0.0294665], [3, 0.293333, 0.0648263]], [0.272271, [3, -0.293333, 0], [3, 0.413333, 0]], [0.272271, [3, -0.413333, 0], [3, 0.0666667, 0]], [0.0307829, [3, -0.0666667, 0.0344917], [3, 0.08, -0.04139]], [-0.0106071, [3, -0.08, 0], [3, 0.373333, 0]], [-0.00637537, [3, -0.373333, 0], [3, 0.4, 0]], [-0.00637537, [3, -0.4, 0], [3, 0.12, 0]], [-0.0106071, [3, -0.12, 0], [3, 0.333333, 0]], [-0.00296359, [3, -0.333333, 0], [3, 0.386667, 0]], [-0.00296359, [3, -0.386667, 0], [3, 0.36, 0]], [-0.000291344, [3, -0.36, -0.0011691], [3, 0.146667, 0.000476302]], [0.00197263, [3, -0.146667, 0], [3, 0.12, 0]], [0.00197263, [3, -0.12, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.04, 0]], [0, [3, -0.04, 0], [3, 0.0933333, 0]], [0, [3, -0.0933333, 0], [3, 0.413333, 0]], [0, [3, -0.413333, 0], [3, 0.266667, 0]], [0, [3, -0.266667, 0], [3, 0.173333, 0]], [0, [3, -0.173333, 0], [3, 0.293333, 0]], [0.00114703, [3, -0.293333, -0.000516639], [3, 0.08, 0.000140902]], [0.00197262, [3, -0.08, 0], [3, 0.133333, 0]], [0.00197262, [3, -0.133333, 0], [3, 0.2, 0]], [-0.000291344, [3, -0.2, 0], [3, 0, 0]]])

    names.append("LKneePitch")
    times.append([0.12, 0.48, 0.88, 3.2, 3.44, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 12.52, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[1.03475, [3, -0.04, 0], [3, 0.12, 0]], [1.02989, [3, -0.12, 0], [3, 0.133333, 0]], [1.03067, [3, -0.133333, 0], [3, 0.773333, 0]], [1.03067, [3, -0.773333, 0], [3, 0.08, 0]], [1.02989, [3, -0.08, 0], [3, 0.373333, 0]], [1.03067, [3, -0.373333, 0], [3, 0.4, 0]], [1.03067, [3, -0.4, 0], [3, 0.12, 0]], [1.02989, [3, -0.12, 0], [3, 0.333333, 0]], [1.71015, [3, -0.333333, -2.29583e-07], [3, 0.386667, 2.66316e-07]], [1.71015, [3, -0.386667, 0], [3, 0.36, 0]], [0.835353, [3, -0.36, 0], [3, 0.146667, 0]], [1.33538, [3, -0.146667, -0.177515], [3, 0.12, 0.14524]], [1.80362, [3, -0.12, 0], [3, 0.133333, 0]], [1.80211, [3, -0.133333, 0.00150841], [3, 0.04, -0.000452524]], [1.06416, [3, -0.04, 0.0565002], [3, 0.0933333, -0.131834]], [0.932324, [3, -0.0933333, 0.00110516], [3, 0.413333, -0.00489429]], [0.92743, [3, -0.413333, 0], [3, 0.106667, 0]], [1.94779, [3, -0.106667, -0.107983], [3, 0.16, 0.161974]], [2.10976, [3, -0.16, 0], [3, 0.173333, 0]], [2.1071, [3, -0.173333, 0.00120887], [3, 0.293333, -0.00204578]], [2.1, [3, -0.293333, 0.00710558], [3, 0.08, -0.00193789]], [1.80362, [3, -0.08, 0.0955768], [3, 0.133333, -0.159295]], [1.33538, [3, -0.133333, 0.129103], [3, 0.2, -0.193654]], [0.835353, [3, -0.2, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.12, 0.48, 0.88, 3.2, 3.44, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[-1.34658, [3, -0.04, 0], [3, 0.12, 0]], [-1.34421, [3, -0.12, -0.000606276], [3, 0.133333, 0.00067364]], [-1.34274, [3, -0.133333, 0], [3, 0.773333, 0]], [-1.34274, [3, -0.773333, 0], [3, 0.08, 0]], [-1.34421, [3, -0.08, 0], [3, 0.373333, 0]], [-1.34274, [3, -0.373333, 0], [3, 0.4, 0]], [-1.34274, [3, -0.4, 0], [3, 0.12, 0]], [-1.34421, [3, -0.12, 0], [3, 0.333333, 0]], [1.84155, [3, -0.333333, 0], [3, 0.386667, 0]], [1.84155, [3, -0.386667, 2.39685e-06], [3, 0.36, -2.23155e-06]], [-1.33762, [3, -0.36, 0.0129515], [3, 0.146667, -0.00527652]], [-1.3429, [3, -0.146667, 0], [3, 0.12, 0]], [-1.3429, [3, -0.12, 0], [3, 0.133333, 0]], [-1.3331, [3, -0.133333, 0], [3, 0.04, 0]], [-1.34226, [3, -0.04, 0], [3, 0.0933333, 0]], [-1.34226, [3, -0.0933333, 0], [3, 0.413333, 0]], [-1.3331, [3, -0.413333, 0], [3, 0.266667, 0]], [-1.3331, [3, -0.266667, 7.98948e-07], [3, 0.173333, -5.19316e-07]], [-1.34226, [3, -0.173333, 0], [3, 0.293333, 0]], [-1.33274, [3, -0.293333, 0], [3, 0.08, 0]], [-1.34289, [3, -0.08, 0], [3, 0.133333, 0]], [-1.34289, [3, -0.133333, 0], [3, 0.2, 0]], [-1.33762, [3, -0.2, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.12, 0.48, 0.88, 3.2, 3.44, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[1.1899, [3, -0.04, 0], [3, 0.12, 0]], [1.18727, [3, -0.12, 0.00161543], [3, 0.133333, -0.00179492]], [1.17967, [3, -0.133333, 0], [3, 0.773333, 0]], [1.17967, [3, -0.773333, 0], [3, 0.08, 0]], [1.18727, [3, -0.08, 0], [3, 0.373333, 0]], [1.17967, [3, -0.373333, 0], [3, 0.4, 0]], [1.17967, [3, -0.4, 0], [3, 0.12, 0]], [1.18727, [3, -0.12, 0], [3, 0.333333, 0]], [0.29738, [3, -0.333333, 6.02655e-07], [3, 0.386667, -6.9908e-07]], [0.297379, [3, -0.386667, 0], [3, 0.36, 0]], [1.19169, [3, -0.36, 0], [3, 0.146667, 0]], [1.18694, [3, -0.146667, 0], [3, 0.12, 0]], [1.18694, [3, -0.12, 0], [3, 0.133333, 0]], [1.1852, [3, -0.133333, 0], [3, 0.04, 0]], [1.1872, [3, -0.04, 0], [3, 0.0933333, 0]], [1.1872, [3, -0.0933333, 0], [3, 0.413333, 0]], [1.1852, [3, -0.413333, 0], [3, 0.266667, 0]], [1.1852, [3, -0.266667, -5.32632e-07], [3, 0.173333, 3.46211e-07]], [1.1872, [3, -0.173333, 0], [3, 0.293333, 0]], [1.18371, [3, -0.293333, 0], [3, 0.08, 0]], [1.18694, [3, -0.08, 0], [3, 0.133333, 0]], [1.18694, [3, -0.133333, 0], [3, 0.2, 0]], [1.19169, [3, -0.2, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.12, 0.48, 0.88, 3.2, 3.44, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[1.04953, [3, -0.04, 0], [3, 0.12, 0]], [1.04956, [3, -0.12, 0], [3, 0.133333, 0]], [1.04792, [3, -0.133333, 0], [3, 0.773333, 0]], [1.04792, [3, -0.773333, 0], [3, 0.08, 0]], [1.04956, [3, -0.08, 0], [3, 0.373333, 0]], [1.04792, [3, -0.373333, 0], [3, 0.4, 0]], [1.04792, [3, -0.4, 0], [3, 0.12, 0]], [1.04956, [3, -0.12, -0.000100524], [3, 0.333333, 0.000279232]], [1.04984, [3, -0.333333, -5.73957e-08], [3, 0.386667, 6.6579e-08]], [1.04984, [3, -0.386667, 0], [3, 0.36, 0]], [1.04226, [3, -0.36, 0], [3, 0.146667, 0]], [1.04838, [3, -0.146667, 0], [3, 0.12, 0]], [1.04838, [3, -0.12, 0], [3, 0.133333, 0]], [1.04571, [3, -0.133333, 0.00156152], [3, 0.04, -0.000468455]], [1.04229, [3, -0.04, 0], [3, 0.0933333, 0]], [1.04229, [3, -0.0933333, 0], [3, 0.413333, 0]], [1.04571, [3, -0.413333, 0], [3, 0.266667, 0]], [1.04571, [3, -0.266667, 4.66053e-07], [3, 0.173333, -3.02935e-07]], [1.04229, [3, -0.173333, 0.000601748], [3, 0.293333, -0.00101834]], [1.04085, [3, -0.293333, 0], [3, 0.08, 0]], [1.04838, [3, -0.08, 0], [3, 0.133333, 0]], [1.04838, [3, -0.133333, 0], [3, 0.2, 0]], [1.04226, [3, -0.2, 0], [3, 0, 0]]])

    names.append("RAnklePitch")
    times.append([0.12, 0.48, 0.88, 1.76, 3, 3.2, 3.44, 4.44, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[-0.490776, [3, -0.04, 0], [3, 0.12, 0]], [-0.908545, [3, -0.12, 0], [3, 0.133333, 0]], [-0.737609, [3, -0.133333, -0.114457], [3, 0.293333, 0.251805]], [0.190241, [3, -0.293333, 0], [3, 0.413333, 0]], [0.190241, [3, -0.413333, 0], [3, 0.0666667, 0]], [-0.737609, [3, -0.0666667, 0.142446], [3, 0.08, -0.170936]], [-0.908545, [3, -0.08, 0], [3, 0.333333, 0]], [-0.785398, [3, -0.333333, 0], [3, 0.04, 0]], [-0.789236, [3, -0.04, 0], [3, 0.4, 0]], [-0.789236, [3, -0.4, 0], [3, 0.12, 0]], [-0.908545, [3, -0.12, 0.0201729], [3, 0.333333, -0.0560358]], [-1.01786, [3, -0.333333, 0], [3, 0.386667, 0]], [-1.01786, [3, -0.386667, -7.98948e-07], [3, 0.36, 7.43848e-07]], [-0.415205, [3, -0.36, 0], [3, 0.146667, 0]], [-0.640635, [3, -0.146667, 0.0134129], [3, 0.12, -0.0109742]], [-0.65161, [3, -0.12, 0], [3, 0.133333, 0]], [-0.635931, [3, -0.133333, 0], [3, 0.04, 0]], [-0.645785, [3, -0.04, 0], [3, 0.0933333, 0]], [-0.645785, [3, -0.0933333, 0], [3, 0.413333, 0]], [-0.635932, [3, -0.413333, -0.0040466], [3, 0.266667, 0.00261071]], [-0.625813, [3, -0.266667, -0.000507537], [3, 0.173333, 0.000329899]], [-0.625483, [3, -0.173333, -0.000329899], [3, 0.293333, 0.000558291]], [-0.622074, [3, -0.293333, 0], [3, 0.08, 0]], [-0.65161, [3, -0.08, 0], [3, 0.133333, 0]], [-0.640635, [3, -0.133333, -0.0109746], [3, 0.2, 0.0164619]], [-0.415205, [3, -0.2, 0], [3, 0, 0]]])

    names.append("RAnkleRoll")
    times.append([0.12, 0.48, 0.88, 1.76, 3, 3.2, 3.44, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[0.251736, [3, -0.04, 0], [3, 0.12, 0]], [0.154504, [3, -0.12, 0], [3, 0.133333, 0]], [0.19155, [3, -0.133333, -0.0253574], [3, 0.293333, 0.0557863]], [0.397935, [3, -0.293333, 0], [3, 0.413333, 0]], [0.397935, [3, -0.413333, 0], [3, 0.0666667, 0]], [0.19155, [3, -0.0666667, 0.0308718], [3, 0.08, -0.0370462]], [0.154504, [3, -0.08, 0], [3, 0.373333, 0]], [0.158291, [3, -0.373333, 0], [3, 0.4, 0]], [0.158291, [3, -0.4, 0], [3, 0.12, 0]], [0.154504, [3, -0.12, 0.00378771], [3, 0.333333, -0.0105214]], [-0.0376014, [3, -0.333333, 0], [3, 0.386667, 0]], [-0.0376013, [3, -0.386667, -7.07402e-08], [3, 0.36, 6.58616e-08]], [-0.0359203, [3, -0.36, 0], [3, 0.146667, 0]], [-0.306051, [3, -0.146667, 0], [3, 0.12, 0]], [-0.300013, [3, -0.12, -0.00241606], [3, 0.133333, 0.00268451]], [-0.290749, [3, -0.133333, 0], [3, 0.04, 0]], [-0.29351, [3, -0.04, 0], [3, 0.0933333, 0]], [-0.29351, [3, -0.0933333, 0], [3, 0.413333, 0]], [-0.290749, [3, -0.413333, -4.1279e-07], [3, 0.266667, 2.66316e-07]], [-0.290749, [3, -0.266667, 0], [3, 0.173333, 0]], [-0.29351, [3, -0.173333, 0.000777301], [3, 0.293333, -0.00131543]], [-0.297027, [3, -0.293333, 0.00170326], [3, 0.08, -0.000464524]], [-0.300013, [3, -0.08, 0.00112792], [3, 0.133333, -0.00187987]], [-0.30605, [3, -0.133333, 0], [3, 0.2, 0]], [-0.0359203, [3, -0.2, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.12, 0.48, 0.88, 3.2, 3.44, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[0.237824, [3, -0.04, 0], [3, 0.12, 0]], [0.236639, [3, -0.12, 0], [3, 0.133333, 0]], [0.246428, [3, -0.133333, 0], [3, 0.773333, 0]], [0.246428, [3, -0.773333, 0], [3, 0.08, 0]], [0.236639, [3, -0.08, 0], [3, 0.373333, 0]], [0.246428, [3, -0.373333, 0], [3, 0.4, 0]], [0.246428, [3, -0.4, 0], [3, 0.12, 0]], [0.236639, [3, -0.12, 0], [3, 0.333333, 0]], [0.513191, [3, -0.333333, -8.60936e-08], [3, 0.386667, 9.98685e-08]], [0.513191, [3, -0.386667, 0], [3, 0.36, 0]], [0.234954, [3, -0.36, 0.000461502], [3, 0.146667, -0.000188019]], [0.234766, [3, -0.146667, 0], [3, 0.12, 0]], [0.234766, [3, -0.12, 0], [3, 0.133333, 0]], [0.236381, [3, -0.133333, -0.00161459], [3, 0.04, 0.000484377]], [0.244941, [3, -0.04, 0], [3, 0.0933333, 0]], [0.244941, [3, -0.0933333, 0], [3, 0.413333, 0]], [0.23638, [3, -0.413333, 0], [3, 0.266667, 0]], [0.236381, [3, -0.266667, -6.32501e-07], [3, 0.173333, 4.11126e-07]], [0.244941, [3, -0.173333, 0], [3, 0.293333, 0]], [0.237002, [3, -0.293333, 0.00266483], [3, 0.08, -0.000726773]], [0.234766, [3, -0.08, 0], [3, 0.133333, 0]], [0.234766, [3, -0.133333, 0], [3, 0.2, 0]], [0.234954, [3, -0.2, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.12, 0.48, 0.88, 3.2, 3.44, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[-1.03442, [3, -0.04, 0], [3, 0.12, 0]], [-1.04152, [3, -0.12, 0], [3, 0.133333, 0]], [-1.04107, [3, -0.133333, 0], [3, 0.773333, 0]], [-1.04107, [3, -0.773333, 0], [3, 0.08, 0]], [-1.04152, [3, -0.08, 0], [3, 0.373333, 0]], [-1.04107, [3, -0.373333, 0], [3, 0.4, 0]], [-1.04107, [3, -0.4, 0], [3, 0.12, 0]], [-1.04152, [3, -0.12, 0], [3, 0.333333, 0]], [1.50562, [3, -0.333333, -3.44374e-07], [3, 0.386667, 3.99474e-07]], [1.50562, [3, -0.386667, 0], [3, 0.36, 0]], [-1.04126, [3, -0.36, 0], [3, 0.146667, 0]], [-1.03937, [3, -0.146667, 0], [3, 0.12, 0]], [-1.03937, [3, -0.12, 0], [3, 0.133333, 0]], [-1.03726, [3, -0.133333, 0], [3, 0.04, 0]], [-1.03955, [3, -0.04, 0], [3, 0.0933333, 0]], [-1.03955, [3, -0.0933333, 0], [3, 0.413333, 0]], [-1.03726, [3, -0.413333, 0], [3, 0.266667, 0]], [-1.03726, [3, -0.266667, 5.99211e-07], [3, 0.173333, -3.89487e-07]], [-1.03955, [3, -0.173333, 0], [3, 0.293333, 0]], [-1.03339, [3, -0.293333, 0], [3, 0.08, 0]], [-1.03937, [3, -0.08, 0], [3, 0.133333, 0]], [-1.03937, [3, -0.133333, 0], [3, 0.2, 0]], [-1.04126, [3, -0.2, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.12, 0.48, 0.88, 3.2, 3.44, 3.84, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[0.684892, [3, -0.04, 0], [3, 0.12, 0]], [0.687504, [3, -0.12, 0], [3, 0.133333, 0]], [0.2, [3, -0.133333, 0], [3, 0.773333, 0]], [0.684892, [3, -0.773333, -0.0252493], [3, 0.08, 0.00261199]], [0.687504, [3, -0.08, 0], [3, 0.133333, 0]], [0.2, [3, -0.133333, 0], [3, 0.24, 0]], [0.684892, [3, -0.24, 0], [3, 0.4, 0]], [0.684892, [3, -0.4, 0], [3, 0.12, 0]], [0.687504, [3, -0.12, -0.000334498], [3, 0.333333, 0.000929161]], [0.688683, [3, -0.333333, 0], [3, 0.386667, 0]], [0.688683, [3, -0.386667, 0], [3, 0.36, 0]], [0.689732, [3, -0.36, 0], [3, 0.146667, 0]], [0.680738, [3, -0.146667, 0], [3, 0.12, 0]], [0.680738, [3, -0.12, 0], [3, 0.133333, 0]], [0.689732, [3, -0.133333, 0], [3, 0.04, 0]], [0.2, [3, -0.04, 0], [3, 0.0933333, 0]], [0.2, [3, -0.0933333, 0], [3, 0.413333, 0]], [0.689732, [3, -0.413333, 0], [3, 0.266667, 0]], [0.689732, [3, -0.266667, 0], [3, 0.173333, 0]], [0.2, [3, -0.173333, 0], [3, 0.293333, 0]], [0.26, [3, -0.293333, 0], [3, 0.08, 0]], [0.17, [3, -0.08, 0], [3, 0.133333, 0]], [0.73, [3, -0.133333, -0.00599603], [3, 0.2, 0.00899404]], [0.689732, [3, -0.2, 0], [3, 0, 0]]])

    names.append("RHipPitch")
    times.append([0.12, 0.48, 0.88, 1.76, 3, 3.2, 3.44, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[-0.631429, [3, -0.04, 0], [3, 0.12, 0]], [-1.0928, [3, -0.12, 0.133263], [3, 0.133333, -0.148069]], [-1.47542, [3, -0.133333, 0], [3, 0.293333, 0]], [-1.34739, [3, -0.293333, 0], [3, 0.413333, 0]], [-1.34739, [3, -0.413333, 0], [3, 0.0666667, 0]], [-1.47542, [3, -0.0666667, 0], [3, 0.08, 0]], [-1.0928, [3, -0.08, -0.0730296], [3, 0.373333, 0.340805]], [-0.233921, [3, -0.373333, 0], [3, 0.4, 0]], [-0.233921, [3, -0.4, 0], [3, 0.12, 0]], [-1.0928, [3, -0.12, 0], [3, 0.333333, 0]], [-0.648589, [3, -0.333333, 0], [3, 0.386667, 0]], [-0.648589, [3, -0.386667, 0], [3, 0.36, 0]], [-0.521063, [3, -0.36, 0], [3, 0.146667, 0]], [-0.786462, [3, -0.146667, 0], [3, 0.12, 0]], [-0.762139, [3, -0.12, 0], [3, 0.133333, 0]], [-0.784293, [3, -0.133333, 0.00792926], [3, 0.04, -0.00237878]], [-0.793063, [3, -0.04, 0], [3, 0.0933333, 0]], [-0.793063, [3, -0.0933333, 0], [3, 0.413333, 0]], [-0.794512, [3, -0.413333, 0.00144963], [3, 0.266667, -0.000935242]], [-0.8635, [3, -0.266667, 0.0168628], [3, 0.173333, -0.0109608]], [-0.877983, [3, -0.173333, 0.000231883], [3, 0.293333, -0.000392417]], [-0.878375, [3, -0.293333, 0], [3, 0.08, 0]], [-0.762138, [3, -0.08, 0], [3, 0.133333, 0]], [-0.786461, [3, -0.133333, 0], [3, 0.2, 0]], [-0.521063, [3, -0.2, 0], [3, 0, 0]]])

    names.append("RHipRoll")
    times.append([0.12, 0.48, 0.88, 1.76, 3, 3.2, 3.44, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[-0.250439, [3, -0.04, 0], [3, 0.12, 0]], [-0.391076, [3, -0.12, 0], [3, 0.133333, 0]], [-0.278438, [3, -0.133333, -0.0801888], [3, 0.293333, 0.176415]], [0.378736, [3, -0.293333, 0], [3, 0.413333, 0]], [0.378736, [3, -0.413333, 0], [3, 0.0666667, 0]], [-0.278438, [3, -0.0666667, 0.0938653], [3, 0.08, -0.112638]], [-0.391076, [3, -0.08, 0.0198163], [3, 0.373333, -0.0924759]], [-0.615314, [3, -0.373333, 0], [3, 0.4, 0]], [-0.615314, [3, -0.4, 0], [3, 0.12, 0]], [-0.391076, [3, -0.12, -0.0570511], [3, 0.333333, 0.158475]], [0.0312655, [3, -0.333333, -2.15234e-08], [3, 0.386667, 2.49671e-08]], [0.0312655, [3, -0.386667, -2.49671e-08], [3, 0.36, 2.32453e-08]], [0.0357389, [3, -0.36, -0.00447343], [3, 0.146667, 0.00182251]], [0.304387, [3, -0.146667, -0.00538833], [3, 0.12, 0.00440863]], [0.308796, [3, -0.12, 0], [3, 0.133333, 0]], [0.288178, [3, -0.133333, 0], [3, 0.04, 0]], [0.294328, [3, -0.04, 0], [3, 0.0933333, 0]], [0.294328, [3, -0.0933333, 0], [3, 0.413333, 0]], [0.288178, [3, -0.413333, 0.00333076], [3, 0.266667, -0.00214888]], [0.277889, [3, -0.266667, 0], [3, 0.173333, 0]], [0.284083, [3, -0.173333, 0], [3, 0.293333, 0]], [0.27521, [3, -0.293333, 0], [3, 0.08, 0]], [0.308796, [3, -0.08, 0], [3, 0.133333, 0]], [0.304387, [3, -0.133333, 0.0044087], [3, 0.2, -0.00661304]], [0.0357389, [3, -0.2, 0], [3, 0, 0]]])

    names.append("RHipYawPitch")
    times.append([0.12, 0.48, 0.88, 1.76, 3, 3.2, 3.44, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[0, [3, -0.04, 0], [3, 0.12, 0]], [-0.0106071, [3, -0.12, 0], [3, 0.133333, 0]], [0.0307829, [3, -0.133333, -0.04139], [3, 0.293333, 0.091058]], [0.506145, [3, -0.293333, 0], [3, 0.413333, 0]], [0.506145, [3, -0.413333, 0], [3, 0.0666667, 0]], [0.0307829, [3, -0.0666667, 0.0344917], [3, 0.08, -0.04139]], [-0.0106071, [3, -0.08, 0], [3, 0.373333, 0]], [-0.00637537, [3, -0.373333, 0], [3, 0.4, 0]], [-0.00637537, [3, -0.4, 0], [3, 0.12, 0]], [-0.0106071, [3, -0.12, 0], [3, 0.333333, 0]], [-0.00296359, [3, -0.333333, 0], [3, 0.386667, 0]], [-0.00296359, [3, -0.386667, 0], [3, 0.36, 0]], [-0.000291344, [3, -0.36, -0.0011691], [3, 0.146667, 0.000476302]], [0.00197263, [3, -0.146667, 0], [3, 0.12, 0]], [0.00197263, [3, -0.12, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.04, 0]], [0, [3, -0.04, 0], [3, 0.0933333, 0]], [0, [3, -0.0933333, 0], [3, 0.413333, 0]], [0, [3, -0.413333, 0], [3, 0.266667, 0]], [0, [3, -0.266667, 0], [3, 0.173333, 0]], [0, [3, -0.173333, 0], [3, 0.293333, 0]], [0.00114703, [3, -0.293333, -0.000516639], [3, 0.08, 0.000140902]], [0.00197262, [3, -0.08, 0], [3, 0.133333, 0]], [0.00197262, [3, -0.133333, 0], [3, 0.2, 0]], [-0.000291344, [3, -0.2, 0], [3, 0, 0]]])

    names.append("RKneePitch")
    times.append([0.12, 0.48, 0.88, 1.76, 3, 3.2, 3.44, 3.84, 4.44, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[1.02925, [3, -0.04, 0], [3, 0.12, 0]], [1.91274, [3, -0.12, 0], [3, 0.133333, 0]], [1.00267, [3, -0.133333, 0.185245], [3, 0.293333, -0.407539]], [0.13439, [3, -0.293333, 0], [3, 0.413333, 0]], [0.13439, [3, -0.413333, 0], [3, 0.0666667, 0]], [1.00267, [3, -0.0666667, -0.269447], [3, 0.08, 0.323337]], [1.91274, [3, -0.08, 0], [3, 0.133333, 0]], [1.84481, [3, -0.133333, 0], [3, 0.2, 0]], [2.11185, [3, -0.2, 0], [3, 0.04, 0]], [2.10462, [3, -0.04, 0], [3, 0.4, 0]], [2.10462, [3, -0.4, 0], [3, 0.12, 0]], [1.91274, [3, -0.12, 0.0376862], [3, 0.333333, -0.104684]], [1.67751, [3, -0.333333, 0], [3, 0.386667, 0]], [1.67751, [3, -0.386667, 0], [3, 0.36, 0]], [0.836199, [3, -0.36, 0], [3, 0.146667, 0]], [1.34583, [3, -0.146667, 0], [3, 0.12, 0]], [1.34364, [3, -0.12, 0.00218619], [3, 0.133333, -0.0024291]], [1.32407, [3, -0.133333, 0], [3, 0.04, 0]], [1.32991, [3, -0.04, 0], [3, 0.0933333, 0]], [1.32991, [3, -0.0933333, 0], [3, 0.413333, 0]], [1.32407, [3, -0.413333, 0.003394], [3, 0.266667, -0.00218968]], [1.31315, [3, -0.266667, 0], [3, 0.173333, 0]], [1.31975, [3, -0.173333, 0], [3, 0.293333, 0]], [1.31048, [3, -0.293333, 0], [3, 0.08, 0]], [1.34364, [3, -0.08, -0.00131211], [3, 0.133333, 0.00218685]], [1.34583, [3, -0.133333, 0], [3, 0.2, 0]], [0.836199, [3, -0.2, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.12, 0.48, 0.88, 3.2, 3.44, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[-1.35043, [3, -0.04, 0], [3, 0.12, 0]], [-1.34807, [3, -0.12, -0.000606822], [3, 0.133333, 0.000674247]], [-1.34659, [3, -0.133333, 0], [3, 0.773333, 0]], [-1.34659, [3, -0.773333, 0], [3, 0.08, 0]], [-1.34807, [3, -0.08, 0], [3, 0.373333, 0]], [-1.34659, [3, -0.373333, 0], [3, 0.4, 0]], [-1.34659, [3, -0.4, 0], [3, 0.12, 0]], [-1.34807, [3, -0.12, 0], [3, 0.333333, 0]], [1.83843, [3, -0.333333, 0], [3, 0.386667, 0]], [1.83842, [3, -0.386667, 6.52474e-06], [3, 0.36, -6.07476e-06]], [-1.34147, [3, -0.36, 0.0129734], [3, 0.146667, -0.00528544]], [-1.34675, [3, -0.146667, 0], [3, 0.12, 0]], [-1.34675, [3, -0.12, 0], [3, 0.133333, 0]], [-1.33694, [3, -0.133333, 0], [3, 0.04, 0]], [-1.34612, [3, -0.04, 0], [3, 0.0933333, 0]], [-1.34612, [3, -0.0933333, 0], [3, 0.413333, 0]], [-1.33694, [3, -0.413333, 0], [3, 0.266667, 0]], [-1.33694, [3, -0.266667, 1.33158e-07], [3, 0.173333, -8.65527e-08]], [-1.34612, [3, -0.173333, 0], [3, 0.293333, 0]], [-1.33661, [3, -0.293333, 0], [3, 0.08, 0]], [-1.34675, [3, -0.08, 0], [3, 0.133333, 0]], [-1.34675, [3, -0.133333, 0], [3, 0.2, 0]], [-1.34147, [3, -0.2, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.12, 0.48, 0.88, 3.2, 3.44, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[-1.15717, [3, -0.04, 0], [3, 0.12, 0]], [-1.15849, [3, -0.12, 0], [3, 0.133333, 0]], [-1.15735, [3, -0.133333, 0], [3, 0.773333, 0]], [-1.15735, [3, -0.773333, 0], [3, 0.08, 0]], [-1.15849, [3, -0.08, 0], [3, 0.373333, 0]], [-1.15735, [3, -0.373333, 0], [3, 0.4, 0]], [-1.15735, [3, -0.4, 0], [3, 0.12, 0]], [-1.15849, [3, -0.12, 0], [3, 0.333333, 0]], [-0.299656, [3, -0.333333, -2.86979e-08], [3, 0.386667, 3.32895e-08]], [-0.299656, [3, -0.386667, 0], [3, 0.36, 0]], [-1.15891, [3, -0.36, 0], [3, 0.146667, 0]], [-1.15742, [3, -0.146667, 0], [3, 0.12, 0]], [-1.15742, [3, -0.12, 0], [3, 0.133333, 0]], [-1.15266, [3, -0.133333, 0], [3, 0.04, 0]], [-1.15455, [3, -0.04, 0], [3, 0.0933333, 0]], [-1.15455, [3, -0.0933333, 0], [3, 0.413333, 0]], [-1.15266, [3, -0.413333, -2.06395e-07], [3, 0.266667, 1.33158e-07]], [-1.15266, [3, -0.266667, 0], [3, 0.173333, 0]], [-1.15455, [3, -0.173333, 0], [3, 0.293333, 0]], [-1.15189, [3, -0.293333, 0], [3, 0.08, 0]], [-1.15742, [3, -0.08, 0], [3, 0.133333, 0]], [-1.15742, [3, -0.133333, 0], [3, 0.2, 0]], [-1.15891, [3, -0.2, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.12, 0.48, 0.88, 3.2, 3.44, 4.56, 5.76, 6.12, 7.12, 8.28, 9.36, 9.8, 10.16, 10.56, 10.68, 10.96, 12.2, 13, 13.52, 14.4, 14.64, 15.04, 15.64])
    keys.append([[0, [3, -0.04, 0], [3, 0.12, 0]], [0, [3, -0.12, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.773333, 0]], [0, [3, -0.773333, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.373333, 0]], [0, [3, -0.373333, 0], [3, 0.4, 0]], [0, [3, -0.4, 0], [3, 0.12, 0]], [0, [3, -0.12, 0], [3, 0.333333, 0]], [0, [3, -0.333333, 0], [3, 0.386667, 0]], [0, [3, -0.386667, 0], [3, 0.36, 0]], [0, [3, -0.36, 0], [3, 0.146667, 0]], [0, [3, -0.146667, 0], [3, 0.12, 0]], [0, [3, -0.12, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.04, 0]], [0, [3, -0.04, 0], [3, 0.0933333, 0]], [0, [3, -0.0933333, 0], [3, 0.413333, 0]], [0, [3, -0.413333, 0], [3, 0.266667, 0]], [0, [3, -0.266667, 0], [3, 0.173333, 0]], [0, [3, -0.173333, 0], [3, 0.293333, 0]], [0, [3, -0.293333, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.2, 0]], [0, [3, -0.2, 0], [3, 0, 0]]])

    try:
      # uncomment the following line and modify the IP if you use this script outside Choregraphe.
      motion = ALProxy("ALMotion", "127.0.0.1", 9559)

      motion.angleInterpolationBezier(names, times, keys)
    except BaseException, err:
      print err

if __name__ == "__main__":

    robotIP = "127.0.0.1"  # "192.168.11.3"

    port = 9559  # 9559 # Insert NAO port

    if len(sys.argv) <= 1:
        print"(robotIP default: 127.0.0.1)"
    elif len(sys.argv) <= 2:
        robotIP = sys.argv[1]
    else:
        port = int(sys.argv[2])
        robotIP = sys.argv[1]

