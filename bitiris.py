"""
Duz figur sonuna eklenir 3 tur vardir. Kolay Bitiris-Kollu Bitiris-Yerde Bitiris
"""

import sys
import time
from naoqi import ALProxy



def bitiris_normal():
    time.sleep(1.5)
    import baslangicFigur
    baslangicFigur.main("127.0.0.1", 9559)

def bitiris_kollu():
    names = list()
    times = list()
    keys = list()

    names.append("LElbowRoll")
    times.append([0.24, 0.76, 2, 3.2, 3.92])
    keys.append([[-0.0493462, [3, -0.08, 0], [3, 0.173333, 0]], [-0.942446, [3, -0.173333, 0], [3, 0.413333, 0]],
                 [-0.047439, [3, -0.413333, 0], [3, 0.4, 0]], [-0.980875, [3, -0.4, 0], [3, 0.24, 0]],
                 [-0.341023, [3, -0.24, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.24, 0.76, 2, 3.2, 3.92])
    keys.append([[-0.253046, [3, -0.08, 0], [3, 0.173333, 0]], [0.792903, [3, -0.173333, 0], [3, 0.413333, 0]],
                 [-0.00796121, [3, -0.413333, 0], [3, 0.4, 0]], [0.876155, [3, -0.4, 0], [3, 0.24, 0]],
                 [-1.38239, [3, -0.24, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.24, 0.76, 2, 3.92])
    keys.append([[0.603349, [3, -0.08, 0], [3, 0.173333, 0]], [0.603349, [3, -0.173333, 0], [3, 0.413333, 0]],
                 [0, [3, -0.413333, 0], [3, 0.64, 0]], [0.74, [3, -0.64, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.24, 0.76, 2, 3.2, 3.92])
    keys.append([[-1.33255, [3, -0.08, 0], [3, 0.173333, 0]], [1.81282, [3, -0.173333, 0], [3, 0.413333, 0]],
                 [1.32112, [3, -0.413333, 0.18587], [3, 0.4, -0.179874]], [0.715585, [3, -0.4, 0], [3, 0.24, 0]],
                 [1.39233, [3, -0.24, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.24, 0.76, 2, 3.2, 3.92])
    keys.append([[1.18964, [3, -0.08, 0], [3, 0.173333, 0]], [0.193198, [3, -0.173333, 0], [3, 0.413333, 0]],
                 [0.614443, [3, -0.413333, 0], [3, 0.4, 0]], [0.0994838, [3, -0.4, 0], [3, 0.24, 0]],
                 [0.303759, [3, -0.24, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.24, 0.76, 2, 3.2, 3.92])
    keys.append([[1.04156, [3, -0.08, 0], [3, 0.173333, 0]], [1.80746, [3, -0.173333, 0], [3, 0.413333, 0]],
                 [0.00424043, [3, -0.413333, 0.3866], [3, 0.4, -0.374129]], [-0.47473, [3, -0.4, 0], [3, 0.24, 0]],
                 [0.00982271, [3, -0.24, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.24, 0.76, 2, 3.2, 3.92])
    keys.append([[0.236874, [3, -0.08, 0], [3, 0.173333, 0]], [1.01393, [3, -0.173333, 0], [3, 0.413333, 0]],
                 [0.0426043, [3, -0.413333, 0], [3, 0.4, 0]], [1.19381, [3, -0.4, 0], [3, 0.24, 0]],
                 [0.106423, [3, -0.24, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.24, 0.76, 2, 3.2, 3.92])
    keys.append([[-1.0394, [3, -0.08, 0], [3, 0.173333, 0]], [0.999226, [3, -0.173333, 0], [3, 0.413333, 0]],
                 [0.0152204, [3, -0.413333, 0], [3, 0.4, 0]], [0.249582, [3, -0.4, -0.234362], [3, 0.24, 0.140617]],
                 [1.38239, [3, -0.24, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.24, 0.76, 2, 3.92])
    keys.append(
        [[0.683021, [3, -0.08, 0], [3, 0.173333, 0]], [0.198425, [3, -0.173333, 0.0672672], [3, 0.413333, -0.160406]],
         [0, [3, -0.413333, 0], [3, 0.64, 0]], [0.72, [3, -0.64, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.24, 0.76, 2, 3.2, 3.92])
    keys.append(
        [[-1.33639, [3, -0.08, 0], [3, 0.173333, 0]], [1.09692, [3, -0.173333, -0.0945545], [3, 0.413333, 0.225476]],
         [1.32239, [3, -0.413333, -0.167494], [3, 0.4, 0.162091]], [2.08567, [3, -0.4, 0], [3, 0.24, 0]],
         [1.38141, [3, -0.24, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.24, 0.76, 2, 3.2, 3.92])
    keys.append([[-1.15692, [3, -0.08, 0], [3, 0.173333, 0]], [-0.0791909, [3, -0.173333, 0], [3, 0.413333, 0]],
                 [-0.615371, [3, -0.413333, 0], [3, 0.4, 0]], [-0.375246, [3, -0.4, -0.0648831], [3, 0.24, 0.0389298]],
                 [-0.303932, [3, -0.24, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.24, 0.76, 2, 3.2, 3.92])
    keys.append([[0.00452784, [3, -0.08, 0], [3, 0.173333, 0]], [-0.681282, [3, -0.173333, 0], [3, 0.413333, 0]],
                 [-0.00100349, [3, -0.413333, 0], [3, 0.4, 0]], [-1.82387, [3, -0.4, 0], [3, 0.24, 0]],
                 [0.0098226, [3, -0.24, 0], [3, 0, 0]]])


    try:
        # uncomment the following line and modify the IP if you use this script outside Choregraphe.
        motion = ALProxy("ALMotion", "127.0.0.1", 9559)
        motion.angleInterpolationBezier(names, times, keys)
    except BaseException, err:
        print err


def bitiris_yerde():

    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append([[-0.116626, [3, -0.0933333, 0], [3, 0.506667, 0]],
                 [-0.437231, [3, -0.506667, 0.0805635], [3, 0.386667, -0.0614827]],
                 [-0.542764, [3, -0.386667, 0], [3, 0.693333, 0]],
                 [-0.542764, [3, -0.693333, -2.33027e-07], [3, 0.346667, 1.16513e-07]],
                 [-0.270025, [3, -0.346667, -0.0334158], [3, 0.493333, 0.0475532]],
                 [-0.222472, [3, -0.493333, 0], [3, 0.4, 0]], [-0.230143, [3, -0.4, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append([[-0.0107799, [3, -0.0933333, 0], [3, 0.506667, 0]],
                 [-0.019984, [3, -0.506667, 0.00425989], [3, 0.386667, -0.00325097]],
                 [-0.0333124, [3, -0.386667, 0], [3, 0.693333, 0]],
                 [-0.0333124, [3, -0.693333, -4.16119e-09], [3, 0.346667, 2.08059e-09]],
                 [-0.00617791, [3, -0.346667, 0], [3, 0.493333, 0]], [-0.019984, [3, -0.493333, 0], [3, 0.4, 0]],
                 [-0.0123138, [3, -0.4, 0], [3, 0, 0]]])

    names.append("LAnklePitch")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append([[-1.18429, [3, -0.0933333, 0], [3, 0.506667, 0]],
                 [-1.17355, [3, -0.506667, -0.0107372], [3, 0.386667, 0.00819418]],
                 [-1.0195, [3, -0.386667, -2.22784e-07], [3, 0.693333, 3.99474e-07]],
                 [-1.0195, [3, -0.693333, 0], [3, 0.346667, 0]], [-1.18944, [3, -0.346667, 0], [3, 0.493333, 0]],
                 [-0.895898, [3, -0.493333, -0.237017], [3, 0.4, 0.192176]], [0.0981341, [3, -0.4, 0], [3, 0, 0]]])

    names.append("LAnkleRoll")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append([[0.075208, [3, -0.0933333, 0], [3, 0.506667, 0]], [-0.061318, [3, -0.506667, 0], [3, 0.386667, 0]],
                 [-0.0513083, [3, -0.386667, 0], [3, 0.693333, 0]], [-0.0513083, [3, -0.693333, 0], [3, 0.346667, 0]],
                 [0.066004, [3, -0.346667, -0.00107793], [3, 0.493333, 0.00153397]],
                 [0.067538, [3, -0.493333, 0], [3, 0.4, 0]], [-0.115008, [3, -0.4, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append([[-0.361981, [3, -0.0933333, 0], [3, 0.506667, 0]], [-0.0429101, [3, -0.506667, 0], [3, 0.386667, 0]],
                 [-0.895871, [3, -0.386667, 0], [3, 0.693333, 0]],
                 [-0.895871, [3, -0.693333, -1.99737e-07], [3, 0.346667, 9.98685e-08]],
                 [-0.0352399, [3, -0.346667, 0], [3, 0.493333, 0]],
                 [-0.0444441, [3, -0.493333, 0.00920417], [3, 0.4, -0.00746284]], [-0.389594, [3, -0.4, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append([[-1.25179, [3, -0.0933333, 0], [3, 0.506667, 0]],
                 [-1.23951, [3, -0.506667, -0.0122732], [3, 0.386667, 0.00936637]],
                 [0.533888, [3, -0.386667, 0], [3, 0.693333, 0]],
                 [0.533888, [3, -0.693333, 2.66316e-07], [3, 0.346667, -1.33158e-07]],
                 [-1.23491, [3, -0.346667, 0], [3, 0.493333, 0]], [-1.21037, [3, -0.493333, 0], [3, 0.4, 0]],
                 [-1.21344, [3, -0.4, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append([[0.6256, [3, -0.0933333, 0], [3, 0.506667, 0]], [0.0668, [3, -0.506667, 0], [3, 0.386667, 0]],
                 [1, [3, -0.386667, 0], [3, 0.693333, 0]], [1, [3, -0.693333, 0], [3, 0.346667, 0]],
                 [0.0648, [3, -0.346667, 0], [3, 0.493333, 0]],
                 [0.0707999, [3, -0.493333, -0.0059999], [3, 0.4, 0.00486478]], [0.2976, [3, -0.4, 0], [3, 0, 0]]])

    names.append("LHipPitch")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append([[-0.608956, [3, -0.0933333, 0], [3, 0.506667, 0]],
                 [-0.766959, [3, -0.506667, 0.0721785], [3, 0.386667, -0.0550836]],
                 [-0.990742, [3, -0.386667, 4.82698e-07], [3, 0.693333, -8.65527e-07]],
                 [-0.990743, [3, -0.693333, 0], [3, 0.346667, 0]],
                 [-0.631966, [3, -0.346667, -0.0355719], [3, 0.493333, 0.0506215]],
                 [-0.581345, [3, -0.493333, -0.0506215], [3, 0.4, 0.0410445]], [0.1335, [3, -0.4, 0], [3, 0, 0]]])

    names.append("LHipRoll")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append([[-0.0536479, [3, -0.0933333, 0], [3, 0.506667, 0]], [0.167248, [3, -0.506667, 0], [3, 0.386667, 0]],
                 [-0.146335, [3, -0.386667, 0], [3, 0.693333, 0]],
                 [-0.146335, [3, -0.693333, -6.6579e-08], [3, 0.346667, 3.32895e-08]],
                 [-0.0413762, [3, -0.346667, -0.0180262], [3, 0.493333, 0.0256527]],
                 [-0.0152981, [3, -0.493333, -0.026078], [3, 0.4, 0.0211444]], [0.112024, [3, -0.4, 0], [3, 0, 0]]])

    names.append("LHipYawPitch")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append([[-0.366584, [3, -0.0933333, 0], [3, 0.506667, 0]],
                 [-0.530721, [3, -0.506667, 0.0428839], [3, 0.386667, -0.0327272]],
                 [-0.593417, [3, -0.386667, 2.22784e-07], [3, 0.693333, -3.99474e-07]],
                 [-0.593417, [3, -0.693333, 0], [3, 0.346667, 0]], [-0.473963, [3, -0.346667, 0], [3, 0.493333, 0]],
                 [-0.481634, [3, -0.493333, 0], [3, 0.4, 0]], [-0.1733, [3, -0.4, 0], [3, 0, 0]]])

    names.append("LKneePitch")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append([[2.11255, [3, -0.0933333, 0], [3, 0.506667, 0]], [2.11255, [3, -0.506667, 0], [3, 0.386667, 0]],
                 [1.83339, [3, -0.386667, 4.01011e-06], [3, 0.693333, -7.19053e-06]],
                 [1.83338, [3, -0.693333, 0], [3, 0.346667, 0]], [2.11075, [3, -0.346667, 0], [3, 0.493333, 0]],
                 [1.66895, [3, -0.493333, 0.404649], [3, 0.4, -0.328094]], [-0.0874801, [3, -0.4, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append(
        [[1.65975, [3, -0.0933333, 0], [3, 0.506667, 0]], [1.28238, [3, -0.506667, 0.248023], [3, 0.386667, -0.189281]],
         [0.347834, [3, -0.386667, 1.48522e-07], [3, 0.693333, -2.66316e-07]],
         [0.347834, [3, -0.693333, 0], [3, 0.346667, 0]],
         [1.15353, [3, -0.346667, -0.0129353], [3, 0.493333, 0.0184079]],
         [1.17193, [3, -0.493333, -0.0184079], [3, 0.4, 0.0149253]], [1.48947, [3, -0.4, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append([[0.223922, [3, -0.0933333, 0], [3, 0.506667, 0]], [0.268407, [3, -0.506667, 0], [3, 0.386667, 0]],
                 [0.0128172, [3, -0.386667, 0], [3, 0.693333, 0]],
                 [0.0128172, [3, -0.693333, -4.16119e-09], [3, 0.346667, 2.08059e-09]],
                 [0.260738, [3, -0.346667, 0], [3, 0.493333, 0]],
                 [0.225456, [3, -0.493333, 0.0242846], [3, 0.4, -0.0196902]], [0.128814, [3, -0.4, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append([[0.0367741, [3, -0.0933333, 0], [3, 0.506667, 0]], [0.94797, [3, -0.506667, 0], [3, 0.386667, 0]],
                 [-0.257433, [3, -0.386667, 0], [3, 0.693333, 0]],
                 [-0.257433, [3, -0.693333, -3.66185e-07], [3, 0.346667, 1.83092e-07]],
                 [0.710201, [3, -0.346667, 0], [3, 0.493333, 0]],
                 [0.693327, [3, -0.493333, 0.0168739], [3, 0.4, -0.0136815]], [0.147222, [3, -0.4, 0], [3, 0, 0]]])

    names.append("RAnklePitch")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append([[-1.1863, [3, -0.0933333, 0], [3, 0.506667, 0]],
                 [-0.506179, [3, -0.506667, -0.378413], [3, 0.386667, 0.288789]],
                 [0.815307, [3, -0.386667, -4.45567e-07], [3, 0.693333, 7.98948e-07]],
                 [0.815308, [3, -0.693333, 0], [3, 0.346667, 0]], [-1.18421, [3, -0.346667, 0], [3, 0.493333, 0]],
                 [-0.776162, [3, -0.493333, -0.236915], [3, 0.4, 0.192093]], [0.10282, [3, -0.4, 0], [3, 0, 0]]])

    names.append("RAnkleRoll")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append([[-0.0367741, [3, -0.0933333, 0], [3, 0.506667, 0]], [0.231675, [3, -0.506667, 0], [3, 0.386667, 0]],
                 [-0.109032, [3, -0.386667, 1.3924e-08], [3, 0.693333, -2.49671e-08]],
                 [-0.109032, [3, -0.693333, 0], [3, 0.346667, 0]],
                 [-0.0137641, [3, -0.346667, -0.0234459], [3, 0.493333, 0.0333654]],
                 [0.0614019, [3, -0.493333, -0.0132437], [3, 0.4, 0.0107381]], [0.07214, [3, -0.4, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append([[0.27923, [3, -0.0933333, 0], [3, 0.506667, 0]], [0.0598679, [3, -0.506667, 0], [3, 0.386667, 0]],
                 [1.10299, [3, -0.386667, -2.22784e-07], [3, 0.693333, 3.99474e-07]],
                 [1.10299, [3, -0.693333, 0], [3, 0.346667, 0]], [0.0349066, [3, -0.346667, 0], [3, 0.493333, 0]],
                 [0.0429941, [3, -0.493333, -0.00808751], [3, 0.4, 0.00655744]], [0.411154, [3, -0.4, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append([[1.18267, [3, -0.0933333, 0], [3, 0.506667, 0]], [1.17807, [3, -0.506667, 0], [3, 0.386667, 0]],
                 [2.0799, [3, -0.386667, 0], [3, 0.693333, 0]],
                 [2.07989, [3, -0.693333, 5.59264e-06], [3, 0.346667, -2.79632e-06]],
                 [1.18881, [3, -0.346667, 0.00862318], [3, 0.493333, -0.0122714]],
                 [1.17654, [3, -0.493333, 0.00367094], [3, 0.4, -0.00297644]], [1.16887, [3, -0.4, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append([[0.7316, [3, -0.0933333, 0], [3, 0.506667, 0]], [0.1556, [3, -0.506667, 0], [3, 0.386667, 0]],
                 [1, [3, -0.386667, 0], [3, 0.693333, 0]], [1, [3, -0.693333, 0], [3, 0.346667, 0]],
                 [0.1528, [3, -0.346667, 0], [3, 0.493333, 0]], [0.1572, [3, -0.493333, -0.0044], [3, 0.4, 0.00356757]],
                 [0.306, [3, -0.4, 0], [3, 0, 0]]])

    names.append("RHipPitch")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append([[-0.602905, [3, -0.0933333, 0], [3, 0.506667, 0]],
                 [-1.24718, [3, -0.506667, 0.0254016], [3, 0.386667, -0.0193854]],
                 [-1.26657, [3, -0.386667, 0], [3, 0.693333, 0]], [-1.26657, [3, -0.693333, 0], [3, 0.346667, 0]],
                 [-0.658129, [3, -0.346667, -0.0269487], [3, 0.493333, 0.0383501]],
                 [-0.619779, [3, -0.493333, -0.0383501], [3, 0.4, 0.0310947]], [0.133416, [3, -0.4, 0], [3, 0, 0]]])

    names.append("RHipRoll")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append([[-0.0106959, [3, -0.0933333, 0], [3, 0.506667, 0]], [-0.216252, [3, -0.506667, 0], [3, 0.386667, 0]],
                 [0.279733, [3, -0.386667, -7.42612e-08], [3, 0.693333, 1.33158e-07]],
                 [0.279733, [3, -0.693333, 0], [3, 0.346667, 0]], [-0.0413762, [3, -0.346667, 0], [3, 0.493333, 0]],
                 [-0.021434, [3, -0.493333, 0], [3, 0.4, 0]], [-0.061318, [3, -0.4, 0], [3, 0, 0]]])

    names.append("RHipYawPitch")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append([[-0.366584, [3, -0.0933333, 0], [3, 0.506667, 0]],
                 [-0.530721, [3, -0.506667, 0.0428839], [3, 0.386667, -0.0327272]],
                 [-0.593417, [3, -0.386667, 2.22784e-07], [3, 0.693333, -3.99474e-07]],
                 [-0.593417, [3, -0.693333, 0], [3, 0.346667, 0]], [-0.473963, [3, -0.346667, 0], [3, 0.493333, 0]],
                 [-0.481634, [3, -0.493333, 0], [3, 0.4, 0]], [-0.1733, [3, -0.4, 0], [3, 0, 0]]])

    names.append("RKneePitch")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append(
        [[2.11255, [3, -0.0933333, 0], [3, 0.506667, 0]], [1.97891, [3, -0.506667, 0.13364], [3, 0.386667, -0.101988]],
         [0.218255, [3, -0.386667, 0], [3, 0.693333, 0]],
         [0.218255, [3, -0.693333, -2.16382e-07], [3, 0.346667, 1.08191e-07]],
         [2.11255, [3, -0.346667, 0], [3, 0.493333, 0]], [1.61995, [3, -0.493333, 0.405247], [3, 0.4, -0.328579]],
         [-0.0889301, [3, -0.4, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append([[1.61995, [3, -0.0933333, 0], [3, 0.506667, 0]], [1.30701, [3, -0.506667, 0], [3, 0.386667, 0]],
                 [2.08245, [3, -0.386667, 0], [3, 0.693333, 0]],
                 [2.08244, [3, -0.693333, 8.12264e-06], [3, 0.346667, -4.06132e-06]],
                 [1.1398, [3, -0.346667, 0], [3, 0.493333, 0]],
                 [1.17202, [3, -0.493333, -0.0322136], [3, 0.4, 0.0261191]], [1.47728, [3, -0.4, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append([[-0.188724, [3, -0.0933333, 0], [3, 0.506667, 0]], [-0.296104, [3, -0.506667, 0], [3, 0.386667, 0]],
                 [-0.22429, [3, -0.386667, 0], [3, 0.693333, 0]], [-0.224291, [3, -0.693333, 0], [3, 0.346667, 0]],
                 [-0.204064, [3, -0.346667, -0.00594795], [3, 0.493333, 0.00846439]],
                 [-0.181053, [3, -0.493333, -0.0189193], [3, 0.4, 0.01534]], [-0.101286, [3, -0.4, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.28, 1.8, 2.96, 5.04, 6.08, 7.56, 8.76])
    keys.append([[0.10427, [3, -0.0933333, 0], [3, 0.506667, 0]],
                 [-1.12293, [3, -0.506667, 0.0189588], [3, 0.386667, -0.0144686]],
                 [-1.1374, [3, -0.386667, 7.42612e-08], [3, 0.693333, -1.33158e-07]],
                 [-1.1374, [3, -0.693333, 0], [3, 0.346667, 0]],
                 [-0.857548, [3, -0.346667, -0.0118573], [3, 0.493333, 0.0168739]],
                 [-0.840674, [3, -0.493333, -0.0168739], [3, 0.4, 0.0136815]], [0.0720561, [3, -0.4, 0], [3, 0, 0]]])

    try:
        # uncomment the following line and modify the IP if you use this script outside Choregraphe.
        motion = ALProxy("ALMotion", "127.0.0.1", 9559)
        motion.angleInterpolationBezier(names, times, keys)
    except BaseException, err:
        print err


if __name__ == "__main__":

    robotIP = "127.0.0.1"  # "192.168.11.3"

    port = 9559  # 9559 # Insert NAO port

    if len(sys.argv) <= 1:
        print"(robotIP default: 127.0.0.1)"
    elif len(sys.argv) <= 2:
        robotIP = sys.argv[1]
    else:
        port = int(sys.argv[2])
        robotIP = sys.argv[1]

    #bitiris_kollu()
    # bitiris_normal()